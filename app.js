"use strict";
//досмотрел у другой группы до 5-го занятия, поэтому чуть поэксперементировал
function calcCtoF() {
    let val_tempC = +document.getElementById('tempC').value;
    let val_tempF = val_tempC * 9 / 5 + 32;
    document.getElementById('tempF').value = val_tempF.toFixed(1);
}
function calcCtoC() {
    let val_tempF = +document.getElementById('tempF').value;
    let val_tempC = (val_tempF - 32) * 5 / 9;
    document.getElementById('tempC').value = val_tempC.toFixed(1);
}
// Дальше решил не выпендриваться
let my_name;
let admin;
my_name = "Василий";
admin = my_name;
console.log(admin);

/* тут должно примениться неявное приведение числа 20 
(10 + 10 сложатся нормально) к тексту с последующей конкатенацией
с посленей текстовой десяткой - "10". В результате "2010" */
console.log(10 + 10 + "10");
//Я знал!

/* тут должно примениться неявное приведение первого числа 10 
к тексту с последующей конкатенацией к тексту "10", в итоге "1010"
конкатерируется с неявноприведенной последней 10кой. Итог "101010"*/
console.log(10 + "10" + 10);

/*Тут сработает унарный + в итоге все сложится, как числа, ответ 30*/
console.log(10 + 10 + +"10");

/*Тут сработает унарный -, в итоге -"" превратится в -0, поделив на который
получим -infinity*/

console.log(10 / -"");

/*Тут сработает унарный +, в итоге +"2,5" превратится NaN т.к. "," 
в отличии от "." воспринимается, как текстовый символ. Поделив 10 на
NaN получим NaN, т.к. NaN, куда его в месте с числами не пихай,
всегда получим NaN, кроме проверки isNan*/

console.log(10 / +"2,5");


/* ДЗ №2 плохая идея была продолжать тут же, переменные дублируются,
но уже поздно */

// Задача 1
/* пример 1 
let a = 1, b = 1, c, d; c = ++a;
alert(c); // ответ: 2 

преинкремент сначала добавляет 1, потом присваивается, соответственно 
а становится равным 2, и присваивается переменной с. В итоге с=2 летит
в алерт.  a=2, c=2 

пример 2 
d = b++;
alert(d); //ответ: 1 

постинкремент применяется после присваивания. Соответственно
d станет равно b, которое равно 1 в этот момент. В итоге d=1 летит
в алерт. После присвоения b увеличится на 1 и станет равно 2. 
В итоге d=1, b=2 


пример 3 
c = 2 + ++a;
alert(c); //ответ: 5 

преинкремент применяется до сложения. Соответственно
с станет равно 2 + (2+1) т.е. 5 и улетит в алерт. В итоге с=5, a=3 


пример 4 
d = 2 + b++;
alert(d); //ответ: 4 

постинкремент применяется после сложения и присваивания. Соответственно
d станет равно 2 + 2 т.е. 4, а после к b=2 добавится 1. d=4 улетит в алерт. 
в итоге d=4, b=3 


alert(a); //3 
alert(b); //3

Выводятся по a и b, посчитанные мной выше. */

//Задача 2
/* Чему будут равны переменные x и a в примере ниже? 
Написать почему так произошло (описать последовательность действий). */

let a = 2; //a присвоили значение 2
let x = 1 + (a *= 2); // х равен 1 + a*2 = 5, при этом a 
/* присвоено значение a*2 т.е. 4. Итог a=4, x=5. На мой взгляд
такая запись ужасна. Я бы записал:
let a = 2;
a *= 2;
let x = 1 + a;
*/

/* 3. Объявить две переменные a и b и задать им целочисленные произвольные начальные значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;
*/

/* взял произвольные целые от -99 до 99. Выглядит громоздко, но смысл простой
Math.random().toFixed(0) принимает значения или 0 или 1 с одинаковой вероятностью. 
Соответственно, мы это воспринимаем, как отрицательное или положительное 
число добавляя "-", если значение 1. */

let num1 = Math.random().toFixed(0) == 0 ? (100 * Math.random()).toFixed(0) : -(100 * Math.random()).toFixed(0);
let num2 = Math.random().toFixed(0) == 0 ? (100 * Math.random()).toFixed(0) : -(100 * Math.random()).toFixed(0);

if (num1 >= 0 && num2 >= 0) {
    alert('num1 и num2 положительные. Разность ' + num1 + ' и ' + num2 + ' = ' + (num1 - num2));
}
else if (num1 < 0 && num2 < 0) {
    alert('num1 и num2 отрицательные. Произведение ' + num1 + ' и ' + num2 + ' = ' + (num1 * num2));
}
else {
    alert('num1 и num2 разных знаков. Сумма ' + num1 + ' и ' + num2 + ' = ' + (num1 + num2));
}